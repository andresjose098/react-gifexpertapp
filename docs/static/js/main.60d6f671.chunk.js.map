{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setcategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","propType","PropTypes","func","isRequired","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAKaA,EAAc,SAAdA,EAAe,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAwB7C,OAES,sBAAMC,SAlBO,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAG,OAAGP,GAAH,mBAAiBO,OAClCN,EAAc,KAIlBJ,EAAYW,SAAS,CACjBV,cAAcW,IAAUC,KAAKC,aAS7B,SACA,uBACAC,KAAK,OACLC,MAAOb,EACPc,SA3BkB,SAACX,GACvBF,EAAcE,EAAEY,OAAOF,a,+BCPhBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACfC,EADe,iDACgCC,UAAUH,GAD1C,+DAEJI,MAAMF,GAFF,cAEfG,EAFe,gBAGDA,EAAKC,OAHJ,uBAGdC,EAHc,EAGdA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAClB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAIQ,EAAIG,OAAOC,iBAAiBZ,QATnB,kBAcfM,GAde,4CAAH,sDCATO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAElC,OACI,sBAAKc,UAAU,uBAAf,UACG,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFFO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECFb,SAACA,GAAY,IAAD,EACJlB,mBAAS,CAC/ByB,KAAK,GACLa,SAAQ,IAHkB,mBACvBC,EADuB,KAChBC,EADgB,KA2B9B,OApBAC,qBAAU,WACFxB,EAAQC,GACPwB,MAAK,SAAAd,GAEPY,EAAS,CACAf,KAAKG,EACLU,SAAQ,SAWtB,CAACpB,IAGIqB,EDtBmBI,CAAazB,GAA/Ba,EAHuB,EAG5BN,KAAYa,EAHgB,EAGhBA,QAOnB,OACI,qCACE,oBAAIJ,UAAU,kBAAd,SAAiChB,IAE9BoB,GAAW,mBAAGJ,UAAU,kCAAb,qBAEd,qBAAKA,UAAU,YAAf,SAGUH,EAAOJ,KAAI,SAAAC,GAAG,OACd,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEMde,EA5BY,WAAO,IAAD,EAGO5C,mBAAS,CAAC,gBAHjB,mBAGtB6C,EAHsB,KAGV9C,EAHU,KAQ7B,OACI,qCACI,8CACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBAEA,6BAEU8C,EAAWlB,KAAK,SAAAT,GAAQ,OACxB,cAAC,EAAD,CAEAA,SAAUA,GADLA,Y,MCjB3B4B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.60d6f671.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({setcategories}) => {\r\n   \r\n   const [inputValue, setInputValue] = useState('');//string vacio\r\n    const handleInputChange = (e) =>{\r\n        setInputValue(e.target.value);\r\n\r\n    }   \r\n\r\n    const handleSubtmit =(e) =>{\r\n        e.preventDefault();    \r\n        if(inputValue.trim().length>2){\r\n            setcategories(cat=>[inputValue,...cat]);\r\n            setInputValue('');\r\n        }\r\n        \r\n        \r\n        AddCategory.propType={\r\n            setcategories:PropTypes.func.isRequired\r\n         }\r\n           \r\n        \r\n       \r\n    }\r\n\r\n   return (\r\n        \r\n            <form onSubmit={handleSubtmit}>\r\n            <input\r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n            </form>    \r\n            \r\n       \r\n    )\r\n}\r\n","\r\n\r\n  export const getGifs = async(category)=>{\r\n    const url=`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=eH9K6i9qFTeBQbO5xJmtAYuQbOHEMmYS`;\r\n    const resp=await fetch(url);\r\n    const {data} =await resp.json();\r\n\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images.downsized_medium.url\r\n\r\n        }\r\n    })\r\n\r\n   return gifs;\r\n   \r\n  \r\n    //set imagenes se vuelve a llamar a disparar\r\n   \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n    //console.log(id,title,url);\r\n    return (\r\n        <div className=\"card animate__fadeIn\">\r\n           <img src={url} alt={title}/>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n//import { getGifs } from '../helpers/getGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n   \r\n    const {data:images,loading} = useFetchGifs(category);\r\n  \r\n   \r\n\r\n  \r\n \r\n\r\n    return (\r\n        <>\r\n          <h3 className=\"animate__fadeIn\">{category}</h3>\r\n        \r\n            {loading && <p className=\"animate_animated animate__flash\">Loading</p> }\r\n          \r\n      {   <div className=\"card-grid\">\r\n          \r\n                {\r\n                    images.map(img=>(\r\n                    <GifGridItem\r\n                    key={img.id}\r\n                   {... img}\r\n                   />\r\n                        ))\r\n                }\r\n        </div> }\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport {getGifs} from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs=(category)=>{\r\n        const [state, setstate] = useState({\r\n            data:[],\r\n            loading:true\r\n    });\r\n\r\n\r\n        useEffect(()=>{\r\n                getGifs(category)\r\n                .then(img=>{\r\n                \r\n               setstate({\r\n                        data:img,\r\n                        loading:false\r\n                    });\r\n\r\n                \r\n            \r\n\r\n                \r\n            })\r\n        \r\n\r\n            \r\n        },[category])\r\n\r\n        \r\n        return state;\r\n\r\n        }\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp =() => {\r\n    \r\n  \r\n    const [categories, setcategories] = useState(['Dragon Ball']);\r\n   \r\n \r\n\r\n\r\n    return(\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory  setcategories={setcategories}/>\r\n            <hr/>\r\n           \r\n            <ol>\r\n                    {\r\n                      categories.map( category =>(\r\n                      <GifGrid \r\n                      key={category}\r\n                      category={category}/>\r\n                         ))\r\n                }\r\n            </ol>\r\n            \r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n \n    <GifExpertApp/>,\n  \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}